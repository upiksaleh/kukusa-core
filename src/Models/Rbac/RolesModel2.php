<?php
/**
 * Kukusa CMS
 *
 * Copyright (c) 2020, CodeUP.
 * @author  Upik Saleh <upik@codeup.id>
 */

namespace Kukusa\Models\Rbac;


use Kukusa;
use Kukusa\Base\BaseModelController;
use Kukusa\Base\BaseModelRepoControllerTrait;
use Kukusa\Base\Model;
use Kukusa\Base\ModelOptions;
use Kukusa\Behaviors\BlameableBehavior;
use Kukusa\Behaviors\TimestampBehavior;
use Kukusa\Form\Field;
use Kukusa\Log\LoggableBehavior;
use yii\data\ArrayDataProvider;
use yii\db\ActiveQueryInterface;

class RolesModel2 extends Kukusa\Base\BaseModelControllerModel
{
    public $name;
    public $type = 2;
    public $description;
    public $ruleName;
    public $data;
    public $created_by;
    public $updated_by;
    public $updated_at;
    public $created_at;

    public function behaviors()
    {
        return [
            BlameableBehavior::class,
            TimestampBehavior::class,
            LoggableBehavior::class
        ];
    }
    public function attributes()
    {
        return parent::attributes(); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return [
            'name' => 'asa'
        ];
    }
    public function rules()
    {
        return [
            [['name','description'], 'string']
        ];
    }

    /**
     * @inheritDoc
     */
    protected function _options()
    {
        return new ModelOptions([
            'gridDataProvider' => new ArrayDataProvider([
                'allModels' => Kukusa::$app->authManager->getRoles()
            ]),
            'useLinkEncoded' => true,
            'gridViewConfig' => [
                'filterModel'=>['name'=>'129']
            ],
//            'filterRules' => [
//                ['name', 'safe']
//            ]
        ]);
    }

    /**
     * @inheritDoc
     */
    public function form_fields()
    {
        return [
            new Field(['name'=>'name'])
        ];
    }


    protected function onFindModelOne($params)
    {
        $model = new static();
        foreach(Kukusa::$app->authManager->getRole($params) as $key => $value){
            if($model->canSetProperty($key))
                $model->{$key} = $value;
        }
        return $model;
    }

    /**
     * @inheritDoc
     */
    public static function primaryKey()
    {
        return ['name'];
    }
    public static function findOne($condition)
    {
        print_r($condition);exit;
    }

    /**
     * @inheritDoc
     */
    public static function find()
    {
        // TODO: Implement find() method.
    }

    /**
     * @inheritDoc
     */
//    public function insert($runValidation = true, $attributes = null)
//    {
////        print_r($attributes);
////        print_r($this->getDirtyAttributes());exit;
//        $role = Kukusa::$app->authManager->createRole($this->name);
//        return Kukusa::$app->authManager->add($role);
//    }

}